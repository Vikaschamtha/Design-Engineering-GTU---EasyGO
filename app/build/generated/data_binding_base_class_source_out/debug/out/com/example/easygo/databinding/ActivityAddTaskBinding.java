// Generated by view binder compiler. Do not edit!
package com.example.easygo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.easygo.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddTaskBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout addTaskLayout;

  @NonNull
  public final TextInputLayout dateField;

  @NonNull
  public final TextInputLayout descriptionField;

  @NonNull
  public final TextInputEditText inputTaskDate;

  @NonNull
  public final TextInputEditText inputTaskDescription;

  @NonNull
  public final TextInputEditText inputTaskName;

  @NonNull
  public final TextInputEditText inputTaskTime;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final LinearLayout successLayout;

  @NonNull
  public final Button taskSaveBtn;

  @NonNull
  public final TextInputLayout textField;

  @NonNull
  public final TextInputLayout timeField;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddTaskBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout addTaskLayout, @NonNull TextInputLayout dateField,
      @NonNull TextInputLayout descriptionField, @NonNull TextInputEditText inputTaskDate,
      @NonNull TextInputEditText inputTaskDescription, @NonNull TextInputEditText inputTaskName,
      @NonNull TextInputEditText inputTaskTime, @NonNull ProgressBar progress,
      @NonNull LinearLayout successLayout, @NonNull Button taskSaveBtn,
      @NonNull TextInputLayout textField, @NonNull TextInputLayout timeField,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addTaskLayout = addTaskLayout;
    this.dateField = dateField;
    this.descriptionField = descriptionField;
    this.inputTaskDate = inputTaskDate;
    this.inputTaskDescription = inputTaskDescription;
    this.inputTaskName = inputTaskName;
    this.inputTaskTime = inputTaskTime;
    this.progress = progress;
    this.successLayout = successLayout;
    this.taskSaveBtn = taskSaveBtn;
    this.textField = textField;
    this.timeField = timeField;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addTaskLayout;
      LinearLayout addTaskLayout = ViewBindings.findChildViewById(rootView, id);
      if (addTaskLayout == null) {
        break missingId;
      }

      id = R.id.dateField;
      TextInputLayout dateField = ViewBindings.findChildViewById(rootView, id);
      if (dateField == null) {
        break missingId;
      }

      id = R.id.descriptionField;
      TextInputLayout descriptionField = ViewBindings.findChildViewById(rootView, id);
      if (descriptionField == null) {
        break missingId;
      }

      id = R.id.inputTaskDate;
      TextInputEditText inputTaskDate = ViewBindings.findChildViewById(rootView, id);
      if (inputTaskDate == null) {
        break missingId;
      }

      id = R.id.inputTaskDescription;
      TextInputEditText inputTaskDescription = ViewBindings.findChildViewById(rootView, id);
      if (inputTaskDescription == null) {
        break missingId;
      }

      id = R.id.inputTaskName;
      TextInputEditText inputTaskName = ViewBindings.findChildViewById(rootView, id);
      if (inputTaskName == null) {
        break missingId;
      }

      id = R.id.inputTaskTime;
      TextInputEditText inputTaskTime = ViewBindings.findChildViewById(rootView, id);
      if (inputTaskTime == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.successLayout;
      LinearLayout successLayout = ViewBindings.findChildViewById(rootView, id);
      if (successLayout == null) {
        break missingId;
      }

      id = R.id.taskSaveBtn;
      Button taskSaveBtn = ViewBindings.findChildViewById(rootView, id);
      if (taskSaveBtn == null) {
        break missingId;
      }

      id = R.id.textField;
      TextInputLayout textField = ViewBindings.findChildViewById(rootView, id);
      if (textField == null) {
        break missingId;
      }

      id = R.id.timeField;
      TextInputLayout timeField = ViewBindings.findChildViewById(rootView, id);
      if (timeField == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddTaskBinding((LinearLayout) rootView, addTaskLayout, dateField,
          descriptionField, inputTaskDate, inputTaskDescription, inputTaskName, inputTaskTime,
          progress, successLayout, taskSaveBtn, textField, timeField, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
